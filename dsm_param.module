<?php

/**
 * Implements hook_permission().
 */
function dsm_param_permission() {
  return array(
    'administer parameter message' => array(
      'title' => t('Administer the Parameter Message module.'),
      'description' => t('Perform administration tasks on the Parameter Message module.'),
    )
  );
}

/**
 * Implements hook_menu().
 */
function dsm_param_menu() {
  $items['admin/config/dsm_param'] = array(
    'title' => 'Parameter Message Configuration',
    'description' => 'Manage all Parameter Messages',
    'page callback' => 'dsm_param_admin',
    'access arguments' => array('administer parameter message'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'dsm_param.admin.inc',
  );
  $items['admin/config/dsm_param/create'] = array(
    'title' => 'Parameter Message Edit',
    'description' => 'Manage the Parameter Message module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dsm_param_create_parameter'),
    'access arguments' => array('administer parameter message'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'dsm_param.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function dsm_param_init() {
  // Get all parameters that have been configured
  // For each, search the URL parameters
  // If match found, set message
  $result = db_query('select * from {dsm_param_parameters}');
  foreach($result as $parameter) {
    $target_param_name = $parameter->parameter_name;
    if (!empty($_GET[$target_param_name])) {
      $msg = filter_xss($_GET[$target_param_name]);
      $msg_status = $parameter->message_status;
      $msg_repeat = $parameter->repeat_message;
      drupal_set_message($msg, $msg_status, $msg_repeat);
    }
  }
}
